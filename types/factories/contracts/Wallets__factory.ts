/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Wallets, WalletsInterface } from "../../contracts/Wallets";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "HUNDRED_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WALLETS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "wallets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f88061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80636ed93dd01460415780637ad71f7214605e5780638d3bd55b146084575b600080fd5b604b6305f5e10081565b6040519081526020015b60405180910390f35b606d606936600460aa565b608b565b6040516001600160a01b0390911681526020016055565b604b600281565b60008160028110609a57600080fd5b01546001600160a01b0316905081565b60006020828403121560bb57600080fd5b503591905056fea26469706673582212203960b3d11571c79223cfd97c29a49a7c21202d7b3e5092ceb657a3a5eff1cf6a64736f6c63430008110033";

type WalletsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallets__factory extends ContractFactory {
  constructor(...args: WalletsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wallets> {
    return super.deploy(overrides || {}) as Promise<Wallets>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Wallets {
    return super.attach(address) as Wallets;
  }
  override connect(signer: Signer): Wallets__factory {
    return super.connect(signer) as Wallets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletsInterface {
    return new utils.Interface(_abi) as WalletsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Wallets {
    return new Contract(address, _abi, signerOrProvider) as Wallets;
  }
}
